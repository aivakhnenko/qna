- cache [current_user&.author_of?(question), question] do
  h1= question.title
  p= question.body
  - if question.files.attached?
    = render partial: 'attachments/attachment', collection: question.files
  - if question.links.any?
    .links-list
      p Links:
      ul
        = render question.links
  - if question.reward
    p Reward:
    p= question.reward.name
    p= image_tag url_for(question.reward.image)
.subscribe
  -if can?(:create, Subscription) && !question.subscription(current_user)
    p= link_to 'Subscribe', question_subscriptions_path(question), method: :post
  -if can? :destroy, question.subscription(current_user)
    p= link_to 'Unsubscribe', subscription_path(question.subscription(current_user)), method: :delete
= render 'votes', resource: question
= render 'comments', resource: question
- if current_user&.author_of?(question)
- if can? :update, question
  p= link_to 'Edit question', '#', class: 'edit-question-link'
- if can? :destroy, question
  p= link_to 'Delete question', question_path(question), method: :delete
- if can? :update, question
  .question-form.hidden
    = render partial: 'form', locals: { submit_text: 'Save question' }